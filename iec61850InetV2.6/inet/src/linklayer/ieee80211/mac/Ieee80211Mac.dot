digraph g {
   nodesep=.5;
   ranksep=2;
   IDLE	                        [shape=box,fontsize=36,width=5,height=2];
   DEFER                        [shape=box,fontsize=36,width=5,height=1];
   WAITDIFS                     [shape=box,fontsize=36,width=2,height=1];
   BACKOFF                      [shape=box,fontsize=36,width=2,height=1];
   TRANSMITTING                 [shape=box,fontsize=36,width=2,height=1];
   WAITSIFS                     [shape=box,fontsize=36,width=2,height=1];
   //TRANSMITTING_RTS_CTS         [shape=box,fontsize=36,width=2,height=1];
   //RECEIVING_RTS_CTS            [shape=box,fontsize=36,width=2,height=1];
   RESERVE                      [shape=box,fontsize=36,width=2,height=1];

   IDLE -> IDLE                 [label="Rx-Broadcast:lowerMsg\n[mode=DCF&&msgKind==BROADCAST]\nsendUp()"];
   IDLE -> RESERVE              [label="Reserve:lowerMsg\n[mode==MACA&&!isForUs&&(msgKind==DATA||msgKind==RTS||msgKind==CTS)]\nscheduleReservePeriod()"];
   IDLE -> WAITSIFS             [label="Rx-RTS:lowerMsg\n[mode==MACA&&isForUs&&msgKind==RTS]\nscheduleSIFSPeriod()"];
   IDLE -> WAITSIFS             [label="Rx-Data:lowerMsg\n[mode==DCF&&msgKind==DATA]\nsendUp(),scheduleSIFSPeriod()"];
   IDLE -> DEFER                [label="DataReady:upperMsg\nbackoff=false,retryCounter=1,backoffPeriod=STD"];
   IDLE -> DEFER                [label="Immediate-DataReady:-\n[!txQueue.empty()]\nbackoff=false,retryCounter=1,backoffPeriod=STD"];

   DEFER -> WAITDIFS            [label="WaitDIFS:radioStateChange\n[radioState==IDLE]\nendDIFS.schedule()"];
   DEFER -> WAITDIFS            [label="Immediate-WaitDIFS:-\n[radioState==IDLE||!backoff]\nendDIFS.schedule()"];

   WAITDIFS -> DEFER            [label="BUSY:radioStateChange\n[radioState!=IDLE]\nbackoff=true,endDIFS.cancel()"];
   WAITDIFS -> DEFER            [label="Immediate-BUSY:-\n[radioState!=IDLE]\nbackoff=true,endDIFS.cancel()"];
   WAITDIFS -> BACKOFF          [label="DIFSover:endDIFS\nendBackoff.schedule()"];

   BACKOFF -> DEFER             [label="BBUSY:radioStateChange\n[radioState!=IDLE]\nbackoff=true,endBackoff.cancel(),backoffPeriod--"];
   BACKOFF -> TRANSMITTING      [label="Tx-Data:endBackoff\n[mode==DCF]\nsendData(),endTimeout.schedule()"];
   BACKOFF -> TRANSMITTING      [label="Immediate-Tx-Data:-\n[mode==DCF&&radioState==IDLE]\nendBackoff.cancel(),sendData(),endTimeout.schedule()"];
   BACKOFF -> TRANSMITTING      [label="Tx-RTS:endBackoff\n[mode==MACA]\nsendData(),endTimeout.schedule()"];
   BACKOFF -> TRANSMITTING      [label="Tx-Broadcast:endBackoff\n[mode=DCF]\nsendData(),endTimeout.schedule()"];

   TRANSMITTING -> IDLE         [label="Rx-ACK:lowerMsg\n[mode==DCF&&msgKind==ACK]\nendTimeout.cancel(),txQueue.pop()"];
   TRANSMITTING -> IDLE         [label="Tx-Failed:endTimeout\n[retryCounter>RETRY_LIMIT]\ntxQueue.pop()"];
   TRANSMITTING -> DEFER        [label="Tx-Timeout:endTimeout\n[retryCounter<=RETRY_LIMIT]\nbackoff=true,retryCounter++"];
   TRANSMITTING -> TRANSMITTING [label="Rx-CTS:lowerMsg\n[mode==MACA&&msgKind==CTS]\nendTimeout.cancel(),sendData(),scheduleTimeoutPeriod()"];
   TRANSMITTING -> IDLE         [label="Tx-Broatcast:endTimeout\n[mode==DCF]\ntxQueue.pop();"];

   WAITSIFS -> IDLE             [label="Tx-ACK:endSIFS\n[mode==DCF]\nsendACK()"];
   WAITSIFS -> IDLE             [label="Tx-CTS:endSIFS\n[mode==MACA]\nsendCTS()"];

   RESERVE -> IDLE              [label="Release:endReserve\n[mode==MACA]"];
   RESERVE -> RESERVE           [label="RReserve:lowerMsg\n[mode==MACA&&!isForUd&&(msgKind==DATA||msgKind==RTS||msgKind==CTS)]\nscheduleReservePeriod()"];
}